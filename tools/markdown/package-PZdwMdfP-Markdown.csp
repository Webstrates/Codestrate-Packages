<div class="section section-visible" data-id="PZdwMdfP" data-type="package" name="Markdown" transient-focussed="true"><div class="paragraph body-paragraph locked collapsed" data-id="CWux8e95" name="Documentation"><div data-type="content" type="text/html" codemirror="true" contenteditable="false" class="section-documentation"><h2>Description</h2><div>Body paragraphs can be toggled to display as markdown.</div></div></div><div class="paragraph data-paragraph locked collapsed" name="Properties" data-id="XkmdKAst"><pre data-type="content" type="application/json" class="section-properties" contenteditable="false">{
	"version": "1.0",
	"icon": "format_quote",
	"description": "Body paragraphs can be toggled to display as markdown.",
	"assets": [
		"showdown.min.js"
	],
	"dependencies": [],
	"changelog":
	{
		"1.0": "Initial version."
	},
	"github": {
		"url": "https://github.com/Webstrates/Codestrate-Packages",
		"folder": "tools/markdown"
	}
}</pre></div><div class="paragraph code-paragraph collapsed" data-id="JsrkyX5g" name="Markdown Code" run-on-load="true" last-execution-state="success"><pre data-type="content" type="text/javascript">const SnackbarUtils = require("#snackbar-utils");
const SnackbarTools = require("#snackbar-tools");

/******************************************************************************/

const toolsName = "markdown-tools";
const showdownOptions = {
	tables: true,
	tasklists: true,
	requireSpaceBeforeHeadingText: true,
	emoji: true,
	simpleLineBreaks: true
};

/******************************************************************************/

SnackbarTools.addTools((target) =&gt; {
	const paragraph = Codestrate.focussedParagraph;
	const content = paragraph ? paragraph.querySelector("[data-type='content']") : false;
	return (content &amp;&amp;
					content.getAttribute("type") === "text/html" &amp;&amp;
					content.getAttribute("contenteditable") === "true" &amp;&amp;
					content.classList.contains("markdown"));
}, toolsName);

/******************************************************************************/

SnackbarUtils.addDivider(1, "body-tools");

SnackbarUtils.addButton("Toggle Markdown", "", "body-tools markdown-button", 1, () =&gt; {
	const paragraph = Codestrate.focussedParagraph;
	const content = paragraph ? paragraph.querySelector("[data-type='content']") : false;
	if (content) content.classList.toggle("markdown");
});

/******************************************************************************/

importLib([
	"showdown.min.js"
]).then(() =&gt; {
	const markdownConverter = new showdown.Converter(showdownOptions);

	const updateMarkdown = (content, output) =&gt; {
		output.innerHTML = markdownConverter.makeHtml(content.innerText);
	};

	// Wait for Codemirror initialization
	setTimeout(() =&gt; document.liveQuerySelectorAll(".body-paragraph [data-type='content']").added((content) =&gt; {
		content.liveAttribute("class").changed((value, oldValue) =&gt; {
			const paragraph = content.closest(".paragraph");

			if (content.classList.contains("markdown")) {
				let output = paragraph.querySelector(".markdown-output");

				if (!output) {
					const outputContainer = document.createElement("transient");
					outputContainer.classList.add("markdown-output-container");

					output = document.createElement("div");
					output.classList.add("markdown-output");

					outputContainer.appendChild(output);
					paragraph.appendChild(outputContainer);
				}

				// Prevent "no textblock" CodeMirror error on empty content
				if (content.innerText === "") content.innerText = "...";

				setTimeout(() =&gt; {
					if (!content.__markdownEditor) {
						const { CodeEditor } = require("#code-editor");
						const editor = new CodeEditor(content, content.parentElement, {
							mode: "text/x-markdown"
						});

						content.__markdownEditor = editor;
					}
				}, 0);

				content.__markdownObserver = new MutationObserver(() =&gt; updateMarkdown(content, output));
				content.__markdownObserver.observe(content, { characterData: true, attributes: false, childList: true, subtree: true });
				updateMarkdown(content, output);
			} else {
				const output = paragraph.querySelector(".markdown-output-container");
				if (output) output.remove();
				const editor = paragraph.querySelector(".default-editor");
				if (editor) editor.remove();
				if (content.__markdownEditor) delete content.__markdownEditor;
				if (content.__markdownObserver) {
					content.__markdownObserver.disconnect();
					delete content.__markdownObserver;
				}
			}
		});
	}), 1000);
});

/******************************************************************************/

let currentParagraph = false;

const editorToSnackbar = (editor) =&gt; {
	const name = Codestrate.focussedParagraph.getAttribute("name") ? Codestrate.focussedParagraph.getAttribute("name") : "Unnamed Paragraph";
	SnackbarUtils.setContent(editor, name + " Markdown");
	currentParagraph = Codestrate.focussedParagraph;
	currentParagraph.querySelector("[data-type='content']").__markdownEditor.editor.refresh();
	currentParagraph.setAttribute("transient-content-paragraph", "true");
};

const editorToParagraph = (editor) =&gt; {
	currentParagraph.appendChild(editor);
	currentParagraph.removeAttribute("transient-content-paragraph");
	currentParagraph = false;
	SnackbarUtils.closeContent();
};

const htmlEditorButton = document.querySelector("#snackbar .html-editor-button");
const markdownEditorButton = SnackbarUtils.createButton("Show Markdown Editor", "", toolsName + " markdown-editor-button", () =&gt; {
	const content = SnackbarUtils.getContent();
	if (content &amp;&amp; content.classList.contains("default-editor")) {
		editorToParagraph(content);
	} else {
		const editor = Codestrate.focussedParagraph.querySelector(".default-editor");
		editorToSnackbar(editor);
	}
});

window.addEventListener("SnackbarRemoveContent", (event) =&gt; {
	if (currentParagraph &amp;&amp; event.detail &amp;&amp; event.detail.classList.contains("default-editor")) {
		editorToParagraph(event.detail);
	}
});

htmlEditorButton.parentNode.insertBefore(markdownEditorButton, htmlEditorButton);</pre></div><div class="paragraph style-paragraph collapsed" data-id="vGUkEBTq" name="Markdown Style"><style data-type="content" type="text/css" codemirror="true">html #snackbar:not([markdown-tools="true"]) .markdown-tools,
html #snackbar[markdown-tools="true"] .html-editor-button {
	display: none;
}

html .markdown[data-type="content"] {
	display: none;
}

html .markdown-button i:after {
	content: var(--markdown);
	font-family: "Material Design Icons";
}

html .markdown-editor-button i:after {
	content: var(--xml);
	font-family: "Material Design Icons";
}

html .markdown-output-container + .default-editor {
	display: none;
}

html #snackbar .snackbar-content .default-editor .CodeMirror,
html #snackbar .snackbar-content .default-editor .CodeMirror-gutters  {
	background: none;
}</style></div><div class="paragraph style-paragraph collapsed" data-id="xUHvS5jh" name="Github Markdown Style"><style data-type="content" type="text/css" codemirror="true">html .markdown-output {
	font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
	font-size: 16px;
	line-height: 1.5;
	word-wrap: break-word;
	background: #fff;
	color: #24292e;
	padding: 48px;
}

html .markdown-output::before {
	display: table;
	content: ""
}

html .markdown-output::after {
	display: table;
	clear: both;
	content: ""
}

html .markdown-output>*:first-child {
	margin-top: 0 !important
}

html .markdown-output>*:last-child {
	margin-bottom: 0 !important
}

html .markdown-output a:not([href]) {
	color: inherit;
	text-decoration: none
}

html .markdown-output .absent {
	color: #cb2431
}

html .markdown-output .anchor {
	float: left;
	padding-right: 4px;
	margin-left: -20px;
	line-height: 1
}

html .markdown-output .anchor:focus {
	outline: none
}

html .markdown-output p,html .markdown-output blockquote,html .markdown-output ul,html .markdown-output ol,html .markdown-output dl,html .markdown-output table,html .markdown-output pre {
	margin-top: 0;
	margin-bottom: 16px
}

html .markdown-output hr {
	height: 0.25em;
	padding: 0;
	margin: 24px 0;
	background-color: #e1e4e8;
	border: 0
}

html .markdown-output blockquote {
	padding: 0 1em;
	color: #6a737d;
	border-left: 0.25em solid #dfe2e5
}

html .markdown-output blockquote>:first-child {
	margin-top: 0
}

html .markdown-output blockquote>:last-child {
	margin-bottom: 0
}

html .markdown-output kbd {
	display: inline-block;
	padding: 3px 5px;
	font-size: 11px;
	line-height: 10px;
	color: #444d56;
	vertical-align: middle;
	background-color: #fafbfc;
	border: solid 1px #c6cbd1;
	border-bottom-color: #959da5;
	border-radius: 3px;
	box-shadow: inset 0 -1px 0 #959da5
}

html .markdown-output h1,html .markdown-output h2,html .markdown-output h3,html .markdown-output h4,html .markdown-output h5,html .markdown-output h6 {
	margin-top: 24px;
	margin-bottom: 16px;
	font-weight: 600;
	line-height: 1.25
}

html .markdown-output h1 .octicon-link,html .markdown-output h2 .octicon-link,html .markdown-output h3 .octicon-link,html .markdown-output h4 .octicon-link,html .markdown-output h5 .octicon-link,html .markdown-output h6 .octicon-link {
	color: #1b1f23;
	vertical-align: middle;
	visibility: hidden
}

html .markdown-output h1:hover .anchor,html .markdown-output h2:hover .anchor,html .markdown-output h3:hover .anchor,html .markdown-output h4:hover .anchor,html .markdown-output h5:hover .anchor,html .markdown-output h6:hover .anchor {
	text-decoration: none
}

html .markdown-output h1:hover .anchor .octicon-link,html .markdown-output h2:hover .anchor .octicon-link,html .markdown-output h3:hover .anchor .octicon-link,html .markdown-output h4:hover .anchor .octicon-link,html .markdown-output h5:hover .anchor .octicon-link,html .markdown-output h6:hover .anchor .octicon-link {
	visibility: visible
}

html .markdown-output h1 tt,html .markdown-output h1 code,html .markdown-output h2 tt,html .markdown-output h2 code,html .markdown-output h3 tt,html .markdown-output h3 code,html .markdown-output h4 tt,html .markdown-output h4 code,html .markdown-output h5 tt,html .markdown-output h5 code,html .markdown-output h6 tt,html .markdown-output h6 code {
	font-size: inherit
}

html .markdown-output h1 {
	padding-bottom: 0.3em;
	font-size: 2em;
	border-bottom: 1px solid #eaecef;
}

html .markdown-output h2 {
	padding-bottom: 0.3em;
	font-size: 1.5em;
	border-bottom: 1px solid #eaecef
}

html .markdown-output h3 {
	font-size: 1.25em
}

html .markdown-output h4 {
	font-size: 1em
}

html .markdown-output h5 {
	font-size: 0.875em
}

html .markdown-output h6 {
	font-size: 0.85em;
	color: #6a737d
}

html .markdown-output ul,html .markdown-output ol {
	padding-left: 2em
}

html .markdown-output ul.no-list,html .markdown-output ol.no-list {
	padding: 0;
	list-style-type: none
}

html .markdown-output ul ul,html .markdown-output ul ol,html .markdown-output ol ol,html .markdown-output ol ul {
	margin-top: 0;
	margin-bottom: 0
}

html .markdown-output li {
	word-wrap: break-all
}

html .markdown-output li>p {
	margin-top: 16px
}

html .markdown-output li+li {
	margin-top: 0.25em
}

html .markdown-output dl {
	padding: 0
}

html .markdown-output dl dt {
	padding: 0;
	margin-top: 16px;
	font-size: 1em;
	font-style: italic;
	font-weight: 600
}

html .markdown-output dl dd {
	padding: 0 16px;
	margin-bottom: 16px
}

html .markdown-output table {
	display: block;
	width: 100%;
	overflow: auto
}

html .markdown-output table th {
	font-weight: 600
}

html .markdown-output table th,html .markdown-output table td {
	padding: 6px 13px;
	border: 1px solid #dfe2e5
}

html .markdown-output table tr {
	background-color: #fff;
	border-top: 1px solid #c6cbd1
}

html .markdown-output table tr:nth-child(2n) {
	background-color: #f6f8fa
}

html .markdown-output table img {
	background-color: transparent
}

html .markdown-output img {
	max-width: 100%;
	box-sizing: content-box;
	background-color: #fff
}

html .markdown-output img[align=right] {
	padding-left: 20px
}

html .markdown-output img[align=left] {
	padding-right: 20px
}

html .markdown-output .emoji {
	max-width: none;
	vertical-align: text-top;
	background-color: transparent
}

html .markdown-output span.frame {
	display: block;
	overflow: hidden
}

html .markdown-output span.frame>span {
	display: block;
	float: left;
	width: auto;
	padding: 7px;
	margin: 13px 0 0;
	overflow: hidden;
	border: 1px solid #dfe2e5
}

html .markdown-output span.frame span img {
	display: block;
	float: left
}

html .markdown-output span.frame span span {
	display: block;
	padding: 5px 0 0;
	clear: both;
	color: #24292e
}

html .markdown-output span.align-center {
	display: block;
	overflow: hidden;
	clear: both
}

html .markdown-output span.align-center>span {
	display: block;
	margin: 13px auto 0;
	overflow: hidden;
	text-align: center
}

html .markdown-output span.align-center span img {
	margin: 0 auto;
	text-align: center
}

html .markdown-output span.align-right {
	display: block;
	overflow: hidden;
	clear: both
}

html .markdown-output span.align-right>span {
	display: block;
	margin: 13px 0 0;
	overflow: hidden;
	text-align: right
}

html .markdown-output span.align-right span img {
	margin: 0;
	text-align: right
}

html .markdown-output span.float-left {
	display: block;
	float: left;
	margin-right: 13px;
	overflow: hidden
}

html .markdown-output span.float-left span {
	margin: 13px 0 0
}

html .markdown-output span.float-right {
	display: block;
	float: right;
	margin-left: 13px;
	overflow: hidden
}

html .markdown-output span.float-right>span {
	display: block;
	margin: 13px auto 0;
	overflow: hidden;
	text-align: right
}

html .markdown-output code,html .markdown-output tt {
	padding: 0.2em 0.4em;
	margin: 0;
	font-size: 85%;
	background-color: rgba(27,31,35,0.05);
	border-radius: 3px
}

html .markdown-output code br,html .markdown-output tt br {
	display: none
}

html .markdown-output del code {
	text-decoration: inherit
}

html .markdown-output pre {
	word-wrap: normal
}

html .markdown-output pre>code {
	padding: 0;
	margin: 0;
	font-size: 100%;
	word-break: normal;
	white-space: pre;
	background: transparent;
	border: 0
}

html .markdown-output .highlight {
	margin-bottom: 16px
}

html .markdown-output .highlight pre {
	margin-bottom: 0;
	word-break: normal
}

html .markdown-output .highlight pre,html .markdown-output pre {
	padding: 16px;
	overflow: auto;
	font-size: 85%;
	line-height: 1.45;
	background-color: #f6f8fa;
	border-radius: 3px
}

html .markdown-output pre code,html .markdown-output pre tt {
	display: inline;
	max-width: auto;
	padding: 0;
	margin: 0;
	overflow: visible;
	line-height: inherit;
	word-wrap: normal;
	background-color: transparent;
	border: 0
}

html .markdown-output .csv-data td,html .markdown-output .csv-data th {
	padding: 5px;
	overflow: hidden;
	font-size: 12px;
	line-height: 1;
	text-align: left;
	white-space: nowrap
}

html .markdown-output .csv-data .blob-num {
	padding: 10px 8px 9px;
	text-align: right;
	background: #fff;
	border: 0
}

html .markdown-output .csv-data tr {
	border-top: 0
}

html .markdown-output .csv-data th {
	font-weight: 600;
	background: #f6f8fa;
	border-top: 0
}</style></div><div class="paragraph style-paragraph collapsed" data-id="NSryqF9n" name="Github Markdown Dark Style"><style data-type="content" type="text/css" codemirror="true">html .markdown-output {
	font-family: var(--font-primary);
	padding: 5px;
	background: var(--color-primary-shade-2);
	color: var(--color-primary-text);
}

html .markdown-output .absent {
	color: #cb2431;
}

html .markdown-output hr {
	background-color: var(--color-tertiary-text);
}

html .markdown-output blockquote {
	color: var(--color-secondary-text);
	border-left: 0.25em solid var(--color-secondary-text);
}

html .markdown-output kbd {
	color: #444d56;
	background-color: #fafbfc;
	border: solid 1px #c6cbd1;
	border-bottom-color: #959da5;
	box-shadow: inset 0 -1px 0 #959da5;
}

html .markdown-output h1 .octicon-link,html .markdown-output h2 .octicon-link,html .markdown-output h3 .octicon-link,html .markdown-output h4 .octicon-link,html .markdown-output h5 .octicon-link,html .markdown-output h6 .octicon-link {
	color: #1b1f23;
}

html .markdown-output h1 {
	border-bottom: 1px solid var(--color-secondary-text);
}

html .markdown-output h2 {
	border-bottom: 1px solid var(--color-secondary-text);
}

html .markdown-output h6 {
	color: var(--color-secondary-text);
}

html .markdown-output table th,html .markdown-output table td {
	border: 1px solid var(--color-secondary-text);
}

html .markdown-output table tr {
	background-color: var(--color-primary-shade-2);
	border-top: 1px solid #c6cbd1;
}

html .markdown-output table tr:nth-child(2n) {
	background-color: var(--color-primary-shade-3);
}

html .markdown-output img {
	background-color: var(--color-primary-shade-2)
}

html .markdown-output span.frame>span {
	border: 1px solid var(--color-secondary-text);
}

html .markdown-output span.frame span span {
	color: var(--color-secondary-text)
}

html .markdown-output code,html .markdown-output tt {
	background-color: var(--color-primary-shade-3);
	font-family: var(--font-monospace);
}

html .markdown-output .highlight pre,html .markdown-output pre {
	background-color: var(--color-primary-shade-3);
	font-family: var(--font-monospace);
}

html .markdown-output .csv-data .blob-num {
	background: var(--color-primary-shade-2);
}

html .markdown-output .csv-data th {
	background: #f6f8fa;
}</style></div></div>